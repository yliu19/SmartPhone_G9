package com.lab2.version1;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Point;
import android.graphics.Rect;
import android.graphics.drawable.ShapeDrawable;
import android.graphics.drawable.shapes.OvalShape;
import android.graphics.drawable.shapes.RectShape;
import android.graphics.drawable.shapes.RoundRectShape;
import android.graphics.RectF;
import android.graphics.Paint;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.os.Environment;
import android.view.Display;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.MarginLayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import android.graphics.DashPathEffect;
import java.lang.Math;

/**
 * Smart Phone Sensing. Object movement and interaction on canvas.
 */
public class MainActivity extends Activity implements OnClickListener {

    /**
     * The buttons.
     */
    private Button locate;
    /**
     * The text view.
     */
    private TextView title;
    private TextView rescan;
    /**
     * The shape.
     */
    private ShapeDrawable drawable;
    /**
     * The canvas.
     */
    private Canvas canvas;
    /**
     * The walls.
     */
    private WifiManager wifiManager;


    private ImageView Cell1,Cell2,Cell3,Cell4,Cell5,Cell6,Cell7,Cell8;

    /////////data
    String [] allSSIDs = {"00:4a:77:4a:6c:6b","04:bf:6d:2e:b0:0d","1c:3a:de:da:18:68","28:ee:52:84:b7:e6","38:43:7d:43:1e:19","50:e0:39:8d:65:b1","50:e0:39:ac:8e:91",
                          "52:e0:39:bd:65:b2","56:67:11:0d:19:9e","62:30:d9:25:70:88","6a:02:98:40:ed:f6","78:96:82:34:75:3d","84:d8:1b:3c:53:e7","8a:d8:1b:3c:53:e6",
                          "ac:22:05:5b:51:c0","ae:22:15:5b:51:c8"};
    String [] unique2 = {"c8:d1:2a:ed:53:54","64:6d:6c:02:50:b4","5e:38:d8:38:bf:61"};
    String [] unique5 = {"08:26:97:ee:2b:c1","10:b1:f8:17:2c:18","34:da:b7:8d:a2:bb","4c:09:d4:ca:0f:7f","ac:22:05:63:82:ca","ce:35:40:76:b7:cb"};
    String [] unique6 = {"08:26:97:d6:f5:d2","0a:26:97:f6:f5:d2","1c:3a:de:d6:d7:65","20:e8:82:f1:ce:8a","30:b5:c2:81:5a:16","38:43:7d:93:30:57","50:e0:39:49:0c:41",
                         "52:e0:39:79:0c:42","54:83:3a:33:ef:61","56:83:3a:33:ef:62","5a:d3:43:fa:fb:51","5e:38:d8:36:42:d1","68:02:b8:06:c3:d5","6a:02:98:06:c3:d5",
                         "ac:22:05:29:2e:42","ae:22:15:63:82:e3"};
    String [] unique7 = {"68:02:b8:40:ed:f6"};
    String [] unique8 = {"28:ee:52:84:b8:2e","2e:ee:52:84:b8:2e","34:2c:c4:d6:49:fd","40:0d:10:ba:e0:69","52:0d:10:ba:e0:69","ae:22:15:2d:d8:c2","c4:ea:1d:f4:c0:73"};

    String [] unique234_2 = {"00:4a:77:4a:6c:6b","5e:38:d8:38:bf:61","64:6d:6c:02:50:b4","7c:39:53:ed:73:4d","ac:22:05:2d:fc:31","ae:22:15:2d:fc:31"};
    String [] unique234_3 = {"50:e0:39:ac:8e:91"};
    String [] unique234_4 = {"2e:ee:52:84:b7:e6","62:cc:22:6e:9e:fd","72:cc:22:6e:9e:fc","78:dd:12:05:53:0b","8c:dc:02:d7:ae:3e","ae:22:15:2d:d8:c2","ae:22:15:5b:51:c8","ce:35:40:76:b7:cb"};
    String [] unique234_test = {"04:bf:6d:2e:b0:0d","1c:3a:de:da:18:68","34:2c:c4:d6:49:fd","62:30:d9:25:70:88","64:cc:22:6e:9e:ff","80:7d:14:cb:3b:a8"};
    int [] old_cellValue = new int [8];
    double [][] data_234 = {
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.022222,0.022222,0.022222,0.13333,0.2,0.044444,0.022222,0.044444,0.11111,0.24444,0.066667,0.066667},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.023256,0.069767,0.093023,0.18605,0.27907,0.18605,0.046512,0.093023,0.023256,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.021739,0.086957,0.17391,0.086957,0.065217,0.021739,0.17391,0.21739,0.021739,0.1087,0.021739,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.027778,0.055556,0.11111,0.13889,0.055556,0.055556,0.13889,0.13889,0.13889,0.027778,0.055556,0.055556,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05,0.05,0.1,0.15,0.05,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05,0.05,0.05,0.05,0.05,0.05,0.1,0.2,0.3,0.05,0.05,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.030303,0.060606,0.060606,0.060606,0.060606,0.39394,0.15152,0.030303,0.12121,0.030303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03125,0.09375,0.1875,0.1875,0.09375,0.15625,0.09375,0.0625,0.03125,0.03125,0.03125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //2
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.038462,0.038462,0.15385,0.42308,0.076923,0.038462,0.19231,0.038462,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.064516,0.032258,0.032258,0.16129,0.16129,0.096774,0.12903,0.19355,0.032258,0.064516,0.032258,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.027778,0.027778,0.027778,0.055556,0.44444,0.41667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0.25714,0.37143,0.37143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0.037037,0.18519,0.37037,0.25926,0.037037,0.037037,0.037037,0.037037,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4,0.2,0.2,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.28571,0.14286,0.14286,0.14286,0.28571,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0.11111,0.11111,0.11111,0.11111,0.11111,0.11111,0.33333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0.11111,0.11111,0.11111,0.66667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0.16667,0.16667,0.16667,0.16667,0.33333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.4375,0.0625,0.125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12821,0.20513,0.10256,0.10256,0.051282,0.10256,0.076923,0.051282,0.051282,0.025641,0.025641,0.025641,0.025641,0.025641,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.030303,0.24242,0.51515,0.12121,0.090909,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02439,0.14634,0.43902,0.31707,0.073171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.038462,0.42308,0.30769,0.11538,0.038462,0.076923,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0.083333,0.125,0.041667,0.33333,0.083333,0.20833,0.125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.047619,0.28571,0.14286,0.19048,0.2381,0.047619,0.047619,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0.14286,0.14286,0.14286,0.57143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0.34783,0.34783,0.1087,0.086957,0.1087,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0.045455,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.017857,0.017857,0.017857,0.017857,0.017857,0.089286,0.25,0.089286,0.017857,0.071429,0.017857,0.053571,0.035714,0.053571,0.071429,0.017857,0.017857,0.017857,0.017857,0.017857,0.017857,0.017857,0.017857,0.017857,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0.018182,0.018182,0.054545,0.054545,0.072727,0.036364,0.090909,0.21818,0.12727,0.072727,0.090909,0.018182,0.018182,0.018182,0.018182,0.018182,0.018182,0.018182,0.018182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.4,0.1,0.1,0.2,0.1,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.027027,0.027027,0.027027,0.027027,0.027027,0.027027,0.027027,0.081081,0.081081,0.13514,0.13514,0.24324,0.13514,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0.035714,0.28571,0.071429,0.21429,0.071429,0.035714,0.17857,0.10714,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0.058824,0.11765,0.17647,0.058824,0.058824,0.058824,0.058824,0.058824,0.058824,0.058824,0.058824,0.058824,0.11765,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.052632,0.052632,0.052632,0.15789,0.31579,0.15789,0.21053,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.10526,0.10526,0.052632,0.052632,0.052632,0.052632,0.10526,0.26316,0.052632,0.10526,0.052632,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}



    };

    double [][] tableData = {
            //1
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0.076923,0.076923,0.076923,0.076923,0.46154,0.23077,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0.21429,0.14286,0.071429,0.21429,0.35714,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //2
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.022222,0.022222,0.022222,0.13333,0.2,0.044444,0.022222,0.044444,0.11111,0.24444,0.066667,0.066667},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.023256,0.069767,0.093023,0.18605,0.27907,0.18605,0.046512,0.093023,0.023256,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.021739,0.086957,0.17391,0.086957,0.065217,0.021739,0.17391,0.21739,0.021739,0.1087,0.021739,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.027778,0.055556,0.11111,0.13889,0.055556,0.055556,0.13889,0.13889,0.13889,0.027778,0.055556,0.055556,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05,0.05,0.1,0.15,0.05,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05,0.05,0.05,0.05,0.05,0.05,0.1,0.2,0.3,0.05,0.05,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.030303,0.060606,0.060606,0.060606,0.060606,0.39394,0.15152,0.030303,0.12121,0.030303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03125,0.09375,0.1875,0.1875,0.09375,0.15625,0.09375,0.0625,0.03125,0.03125,0.03125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //3
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.038462,0.038462,0.15385,0.42308,0.076923,0.038462,0.19231,0.038462,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.064516,0.032258,0.032258,0.16129,0.16129,0.096774,0.12903,0.19355,0.032258,0.064516,0.032258,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.027778,0.027778,0.027778,0.055556,0.44444,0.41667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0.25714,0.37143,0.37143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0.037037,0.18519,0.37037,0.25926,0.037037,0.037037,0.037037,0.037037,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //4
            {0,0,0.0625,0.25,0.1875,0.09375,0.15625,0.0625,0.09375,0.03125,0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.2381,0.14286,0.14286,0.19048,0.14286,0.047619,0.095238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0.033333,0.016667,0.033333,0.11667,0.2,0.11667,0.15,0.2,0.083333,0.016667,0.016667,0.016667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //5
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.011364,0.011364,0.011364,0.056818,0.125,0.079545,0.125,0.011364,0.011364,0.011364,0.011364,0.011364,0.011364,0.011364,0.011364,0.011364,0.011364,0.056818,0.13636,0.27273,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.011628,0.011628,0.011628,0.011628,0.011628,0.023256,0.023256,0.034884,0.046512,0.034884,0.069767,0.069767,0.16279,0.11628,0.081395,0.19767,0.046512,0.011628,0.011628,0.011628,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.011364,0.068182,0.27273,0.26136,0.26136,0.056818,0.068182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.013889,0.013889,0.013889,0.013889,0.013889,0.013889,0.013889,0.013889,0.013889,0.027778,0.041667,0.055556,0.097222,0.041667,0.069444,0.013889,0.013889,0.097222,0.16667,0.19444,0.013889,0.013889,0.013889,0.013889,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0.037037,0.037037,0.074074,0.037037,0.11111,0.074074,0.11111,0.074074,0.037037,0.11111,0.074074,0.037037,0.037037,0.037037,0.037037,0.037037,0.037037,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015152,0.015152,0.015152,0.045455,0.045455,0.10606,0.16667,0.18182,0.045455,0.12121,0.060606,0.12121,0.030303,0.030303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0.050847,0.10169,0.050847,0.084746,0.067797,0.13559,0.10169,0.084746,0.033898,0.067797,0.016949,0.033898,0.033898,0.084746,0.033898,0.016949,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //6
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0.045455,0.045455,0.18182,0.31818,0.18182,0.18182,0.045455,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0.1,0.2,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //7
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0.032258,0.032258,0.032258,0.096774,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.032258,0.25806,0.064516,0.032258,0.032258,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0.125,0.083333,0.16667,0.33333,0.083333,0.041667,0.041667,0.041667,0.083333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //8
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0.052632,0.10526,0.47368,0.15789,0.21053,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0.11765,0.35294,0.11765,0.17647,0.23529,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //8
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.023256,0.023256,0.093023,0.023256,0.11628,0.069767,0.093023,0.11628,0.11628,0.16279,0.023256,0.023256,0.023256,0.023256,0.023256,0.023256,0.023256,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.023256,0.023256,0.023256,0.023256,0.2093,0.30233,0.16279,0.16279,0.069767,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.044444,0.13333,0.022222,0.088889,0.24444,0.33333,0.066667,0.022222,0.022222,0.022222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.028571,0.11429,0.057143,0.085714,0.28571,0.42857,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0.030303,0.030303,0.030303,0.030303,0.030303,0.030303,0.12121,0.24242,0.15152,0.18182,0.090909,0.030303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0.043478,0.043478,0.13043,0.21739,0.30435,0.043478,0.043478,0.17391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //9
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12821,0.20513,0.10256,0.10256,0.051282,0.10256,0.076923,0.051282,0.051282,0.025641,0.025641,0.025641,0.025641,0.025641,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.030303,0.24242,0.51515,0.12121,0.090909,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02439,0.14634,0.43902,0.31707,0.073171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.038462,0.42308,0.30769,0.11538,0.038462,0.076923,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0.083333,0.125,0.041667,0.33333,0.083333,0.20833,0.125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0.047619,0.28571,0.14286,0.19048,0.2381,0.047619,0.047619,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //10
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.076923,0.076923,0.15385,0.23077,0.15385,0.076923,0.076923,0.076923,0.076923,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.083333,0.083333,0.25,0.16667,0.083333,0.083333,0.083333,0.083333,0.083333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0.3,0.1,0.1,0.1,0.1,0.3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //11
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0.03125,0.03125,0.0625,0.03125,0.03125,0.03125,0.03125,0.03125,0.03125,0.375,0.125,0.03125,0.15625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0.095238,0.047619,0.047619,0.2381,0.19048,0.095238,0.047619,0.047619,0.047619,0.047619,0.095238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //12
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0.047619,0.047619,0.047619,0.047619,0.047619,0.047619,0.095238,0.095238,0.2381,0.19048,0.047619,0.047619,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0.027027,0.027027,0.027027,0.10811,0.054054,0.16216,0.027027,0.054054,0.2973,0.21622,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //13
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0.083333,0.083333,0.083333,0.083333,0.083333,0.083333,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0.045455,0.045455,0.045455,0.045455,0.090909,0.045455,0.090909,0.045455,0.045455,0.27273,0.18182,0.045455,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //14
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0.071429,0.14286,0.14286,0.28571,0.071429,0.14286,0.14286,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0.071429,0.071429,0.071429,0.071429,0.071429,0.071429,0.071429,0.071429,0.071429,0.14286,0.21429,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            //15
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0.2,0.6,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0.083333,0.083333,0.083333,0.083333,0.41667,0.25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
            ////////////////////\\\\\\\\\\\\\\\\\\\\////////////////////\\\\\\\\\\\\\\\\\\\\////////////////////\\\\\\\\\\\\\\\\\\\\////////////////
    };
/*    double [][] processed_Data = {
            {0,0,0,0,0,0,0,0,19,1,2,3,0,0,0,0,36,30,37,11,13,11,24,5,8,7,10,9,0,0,6,17,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,21,15,5,9,0,0,3,3,0,0,0,0,2,8,0,0,29,26,5,9,2,0,3,1,12,10,16,13,0,0,6,0,0,0,0,0,0,5,0,0,12,9,26,22,1,0,3,0,10,7,2,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,10,0,0,0,0,0,12,3,0,0,0,0,0,3,8,8,7,8,2,10,1,0,6,21,15,13,0,1,8,0,0,0,0,0,0,1,0,0,0,0,8,3,1,0,0,0,0,0,0,8,5,1,0,0,1,0,0,2,0,0,0,10,1,0,1,3,0,0,0,9,0,0,0,3,0,1,0,0,10,7,0,1,0,0,0,0},
            {54,6,54,0,54,54,54,54,43,29,23,24,17,1,22,28,52,46,47,47,27,27,38,49,21,13,21,15,54,54,17,17,2,0,54,54,54,54,54,11,54,2,54,54,54,54,54,9,41,34,23,23,54,54,16,35,54,54,54,54,10,8,54,54,41,34,23,23,10,54,16,35,27,30,34,29,54,54,25,22,54,54,54,54,18,14,54,54,27,31,41,32,18,13,24,9,27,10,8,8,54,54,6,22,54,54,54,2,5,3,3,8,54,54,10,10,5,13,6,20,35,28,16,16,54,54,16,17,26,27,22,22,10,10,14,11,37,35,33,33,18,12,27,21,54,54,54,54,54,8,54,54,0,54,8,10,6,7,0,54,54,54,54,8,5,15,54,54,10,6,8,2,54,54,54,10,10,6,8,3,54,54,54,9,54,54,54,3,5,8,54,54,39,29,22,17,54,54,19,23},
            {0,-81.346,0,-84,0,0,0,0,-51.928,-69.404,-67.554,-70.515,-81.556,-83.429,-75.5,-80.889,-37.146,-47.4,-41.8,-47.822,-62.469,-67.3,-52.957,-68.05,-70.659,-73.829,-70.31,-71.175,0,0,-73.585,-67,-82.5,-84,0,0,0,0,0,-79.721,0,-82,0,0,0,0,0,-79.28,-50.06,-59.189,-64.775,-66.67,0,0,-73.352,-71.256,0,0,0,0,-77.724,-76,0,0,-50.524,-51.622,-64.133,-66.932,-77.214,0,-72.261,-70,-62.082,-61.656,-56.133,-62.92,0,0,-69.25,-78.905,0,0,0,0,-70.75,-76,0,0,-61.581,-60.543,-54.756,-57.432,-71.03,-81.5,-67.935,-80,-60.455,-75.2,-78.75,-78.395,0,0,-80.917,-82,0,0,0,-83.333,-82.273,-83.727,-82.31,-79.429,0,0,-74,-79.571,-81.846,-81.267,-81.694,-77.633,-58.714,-67.667,-74.885,-75.688,0,0,-72.219,-71.516,-64.507,-67.026,-71.926,-69.851,-80.556,-74,-77.073,-82.429,-62.464,-55.656,-62.143,-63.648,-77.283,-75.355,-69.609,-76.515,0,0,0,0,0,-79.44,0,0,-84,0,-76,-76.038,-81.4,-80,-84,0,0,0,0,-76,-79,-77.532,0,0,-78.294,-80.75,-80.448,-82,0,0,0,-74,-78.226,-80.421,-80.318,-81,0,0,0,-75,0,0,0,-81,-82.4,-79.346,0,0,-56.566,-66.57,-74.792,-76.246,0,0,-77.104,-71.043},
            {0,2.9956,0,0,0,0,0,0,42.212,34.662,24.247,41.132,26.802,0.2449,25.722,45.358,10.466,7.9733,8.4711,44.102,9.3115,9.81,13.172,36.648,11.2,3.9952,6.5471,2.6444,0,0,9.8525,0,0.75,0,0,0,0,0,0,5.364,0,0,0,0,0,0,0,3.7216,7.4131,61.287,5.7697,11.812,0,0,9.8104,24.37,0,0,0,0,4.6136,0,0,0,8.5351,3.2573,8.4267,18.064,4.0255,0,13.628,37.282,7.0638,11.959,5.3822,36.028,0,0,22.448,26.848,0,0,0,0,18.188,18,0,0,13.127,19.118,4.9402,3.2908,12.999,22.25,32.452,11.667,7.9449,0.67429,1.3542,2.66,0,0,3.1875,36.5,0,0,0,0.88889,3.2893,0.7438,1.3175,1.6735,0,0,0,14.959,3.2071,20.462,2.2122,19.294,28.299,42.768,22.41,37.715,0,0,22.296,13.153,17.565,12.435,4.9822,13.289,5.5802,0,5.5583,14.816,24.415,25.004,7.1774,37.546,36.203,3.2612,16.282,18.462,0,0,0,0,0,3.5264,0,0,0,0,0,1.8062,3.04,7.0769,0,0,0,0,0,0,0,7.3128,0,0,5.9135,4.0625,3.9715,0,0,0,0,0,5.5297,4.9806,3.4897,0,0,0,0,0,0,0,0,0,4.24,2.4571,0,0,23.93,69.916,32.332,23.109,0,0,45.497,80.764}
    };*/

    private List<ShapeDrawable> walls;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // set the buttons
        locate = (Button) findViewById(R.id.button);

        // set the text view
        title = (TextView) findViewById(R.id.texttitle);
        rescan = (TextView) findViewById(R.id.button2);
        // set listeners
        locate.setOnClickListener(this);

        Cell1 = (ImageView) findViewById(R.id.cell1);
        Cell2 = (ImageView) findViewById(R.id.cell2);
        Cell3 = (ImageView) findViewById(R.id.cell3);
        Cell4 = (ImageView) findViewById(R.id.cell4);
        Cell5 = (ImageView) findViewById(R.id.cell5);
        Cell6 = (ImageView) findViewById(R.id.cell6);
        Cell7 = (ImageView) findViewById(R.id.cell7);
        Cell8 = (ImageView) findViewById(R.id.cell8);
/*        Cell1.setVisibility(View.INVISIBLE);
        Cell2.setVisibility(View.INVISIBLE);
        Cell3.setVisibility(View.INVISIBLE);
        Cell4.setVisibility(View.INVISIBLE);
        Cell5.setVisibility(View.INVISIBLE);
        Cell6.setVisibility(View.INVISIBLE);
        Cell7.setVisibility(View.INVISIBLE);
        Cell8.setVisibility(View.INVISIBLE);*/
        /////////////////////////////////////////////
        // get the screen dimensions
        Display display = getWindowManager().getDefaultDisplay();
        Point size = new Point();
        display.getSize(size);
        int width = size.x;
        int height = size.y;
        // create a drawable object
//        drawable = new ShapeDrawable(new OvalShape());
//        drawable.getPaint().setColor(Color.BLUE);
//        drawable.setBounds(width/2-20, height/2-20, width/2+20, height/2+20);
        walls = new ArrayList<>();
        ShapeDrawable d1 = new ShapeDrawable(new RectShape());
        d1.setBounds(width/2, height/5+300, width/2+10, height*2/5+100);
        ShapeDrawable d2 = new ShapeDrawable(new RectShape());
        d2.setBounds(width/2+150, height*2/5+100, width/2+160, height*3/5+50);
        walls.add(d1);
        walls.add(d2);
        // create a canvas
        ImageView canvasView = (ImageView) findViewById(R.id.canvas);
        Bitmap blankBitmap = Bitmap.createBitmap(width,height, Bitmap.Config.ARGB_8888);
        canvas = new Canvas(blankBitmap);
        canvasView.setImageBitmap(blankBitmap);
        Paint paint = new Paint();
        //fill colors
        int myColor = Color.parseColor("#757575");
        paint.setColor(myColor);
        paint.setStyle(Paint.Style.FILL);
        //laundrt room
        canvas.drawRect(width/2,height*3/5-100,width-150,height-500, paint);
        //home
        canvas.drawRect(60,height/5+300,width-150,height-500, paint);
        //bedroom
        canvas.drawRect(60,height*3/5-100,width/2-150,height-500, paint);
        //balcony
        canvas.drawRect(width-150,height/5+300,width,height*3/5-100, paint);
        //stairs
        canvas.drawRect(60,height/5,width/2,height/5+300, paint);
        //draw boundaries
        paint.setColor(Color.BLACK);
        paint.setStyle(Paint.Style.STROKE);
        paint.setStrokeWidth(10);
        //laundrt room
        canvas.drawRect(width/2,height*3/5-100,width-150,height-500, paint);
        //inaccessible
        canvas.drawRect(width/2,height*3/5+50,width-150,height-500, paint);
        //home
        canvas.drawRect(60,height/5+300,width-150,height-500, paint);
        //bedroom
        canvas.drawRect(60,height*3/5-100,width/2,height-500, paint);
        //stairs
        canvas.drawRect(60,height/5,width/2,height/5+300, paint);
        //living room
        canvas.drawRect(60,height/5+300,width/2-130,height*3/5-100, paint);
        paint.setColor(Color.BLACK);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawRect(width/2+5,height*3/5+55,width-155,height-505, paint);
        canvas.drawRect(60,height/5+300,width/2-130,height*3/5-100, paint);
        // draw the objects
        for(ShapeDrawable wall : walls)
            wall.draw(canvas);
        Paint fgPaintSel = new Paint();
        fgPaintSel.setStyle(Paint.Style.STROKE);
        fgPaintSel.setPathEffect(new DashPathEffect(new float[] {10f,20f}, 0f));
        paint.setColor(Color.WHITE);
        paint.setStrokeWidth(10);
        canvas.drawRect(60,height*4/5-300,width/4+30,height-500, fgPaintSel);
        canvas.drawRect(60,height*3/5-100,width/4+30,height*4/5-300, fgPaintSel);
        canvas.drawRect(width/4+30,height*4/5-300,width/2,height-500, fgPaintSel);
        canvas.drawRect(width/4+30,height*3/5-100,width/2,height*4/5-300, fgPaintSel);
        canvas.drawRect(width/2,height/5+300,width-150,height*2/5+100, fgPaintSel);
        //////////////////////////////////////////////




    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onClick(View v) {
        System.out.println("Hello, you pressed");
        rescan.setText("Processing");
        double [] prior = {0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125};
        double [] posterior = {0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125};
        double prior_maxval = -2;
        int temp = 0;
        String tempc = "";
        double sum = 0;
        double maxval = -1;
        int [] cellValue = new int [8];
        boolean changed = false;
        int maxcell_index = -1;
        int maxcell_value = -1;
        int stop = 0;

        Cell1.setVisibility(View.INVISIBLE);
        Cell2.setVisibility(View.INVISIBLE);
        Cell3.setVisibility(View.INVISIBLE);
        Cell4.setVisibility(View.INVISIBLE);
        Cell5.setVisibility(View.INVISIBLE);
        Cell6.setVisibility(View.INVISIBLE);
        Cell7.setVisibility(View.INVISIBLE);
        Cell8.setVisibility(View.INVISIBLE);
        //////////////////////////////
        //record wifi data
        wifiManager = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);
        wifiManager.startScan();
        List<ScanResult> scanResults = wifiManager.getScanResults();
        //store wifi data
        int [] RSSIs = new int [scanResults.size()];
        String [] BSSIDs = new String [scanResults.size()];
        for (int m=0;m<scanResults.size();m++){
            RSSIs[m] = scanResults.get(m).level+90;
            BSSIDs[m] = scanResults.get(m).BSSID;
        }
        for (int i=0;i<scanResults.size();i++) {
            System.out.println("BSSI: "+ BSSIDs[i]  + "  RSSI: " + RSSIs[i] + "dBm");

        }
        //reorder RSSI in descending order
        for (int j=0;j<scanResults.size();j++){
            for (int g=j+1;g<scanResults.size();g++){
                if (RSSIs[j]<RSSIs[g]){
                    temp = RSSIs[j];
                    RSSIs[j] = RSSIs[g];
                    RSSIs[g] = temp;
                    tempc = BSSIDs[j];
                    BSSIDs[j] = BSSIDs[g];
                    BSSIDs[g] = tempc;
                }
            }
        }
        // Write results to a label
        for (int i=0;i<scanResults.size();i++) {
            System.out.println("ordered BSSI: "+ BSSIDs[i]  + "  RSSI: " + (RSSIs[i]-90) + "dBm");

        }
        //update belief
        stop = 0;
        for (int i =0;i<scanResults.size() && RSSIs[i] >= 0 && RSSIs[i]<68 && stop==0;i++) {
            int index = Arrays.binarySearch(allSSIDs, BSSIDs[i]);
/*            if (index==1 && RSSIs[i] >= 45 && RSSIs[i]<=58){
                stop = 1;
                System.out.println("Main SSID to classify 234...");
                cellValue = new int [8];
                for (int j =0;j<scanResults.size() && RSSIs[j] >= 0 && RSSIs[j]<68;++) {
                    index = Arrays.binarySearch(unique234_2, BSSIDs[j]);
                    if (index >= 0) {
                        cellValue[1] = cellValue[1] + 2;
                        System.out.println("Main SSID unique in sell 2");
                    } else {
                        index = Arrays.binarySearch(unique234_3, BSSIDs[j]);
                        if (index >= 0) {
                            cellValue[2] = cellValue[2] + 2;
                            System.out.println("Main SSID unique in sell 3");
                        } else {
                            index = Arrays.binarySearch(unique234_4, BSSIDs[j]);
                            if (index >= 0) {
                                cellValue[3] = cellValue[3] + 2;
                                System.out.println("Main SSID unique in sell 4");
                            } else {
                                System.out.println("Not main Unique SSID");
                                index = Arrays.binarySearch(unique234_test, BSSIDs[j]);
                                System.out.println("index of max RSSI: " + index);
                                maxval = 0;
                                prior_maxval = -1;
                                if (index < 0) {
                                    System.out.println("BSSI not found...");
                                } else {
                                    for (int k = 0; k < 4; k++) {
                                        posterior[k] = 0.125;
                                        prior[k] = 0.125;
                                    }
                                    System.out.println("before while loop:  posterior: " + Arrays.toString(posterior) + " prior_max: " + prior_maxval + " maxval:" + maxval);
                                    System.out.println("before loop BSSI: " + BSSIDs[j] + "  RSSI: " + (RSSIs[j] - 90) + "dBm" + " index: " + index);
                                    while (maxval < 0.9 && prior_maxval != maxval) {
                                        System.out.print("table data: ");
                                        for (int k = 0; k < 4; k++) {
                                            //using table data
                                            System.out.print(data_234[index * 8 + k][RSSIs[j]] + ",");
                                            posterior[k] = prior[k] * data_234[index * 8 + k][RSSIs[j]];
                                            sum = sum + posterior[k];
                                            prior[k] = posterior[k];
                                        }
                                        System.out.println(" ");
                                        System.out.println("before nomalize posterior: " + Arrays.toString(posterior) + " MAX P: " + maxval + " Prior max: " + prior_maxval + " sum: " + sum);
                                        prior_maxval = maxval;
                                        //normalize
                                        for (int k = 0; k < 4 && sum != 0; k++) {
                                            posterior[k] = posterior[k] / sum;
                                            maxval = Math.max(maxval, posterior[k]);
                                        }
                                        System.out.println("current posterior: " + Arrays.toString(posterior) + " MAX P: " + maxval + " Prior max: " + prior_maxval + " sum: " + sum);
                                        sum = 0;
                                    }
                                    //update cell value
                                    for (int q = 0; q < 4; q++) {
                                        if (posterior[q] == maxval && maxval != 0) {
                                            cellValue[q] = cellValue[q] + 1;
                                        }
                                    }
                                    System.out.println("current cell values: " + Arrays.toString(cellValue));
                                }
                            }
                        }
                    }
                }
            } else {*/
            index = Arrays.binarySearch(unique2, BSSIDs[i]);
            if (index >=0){
                cellValue[1] = cellValue[1] + 2;
                System.out.println("Unique in sell 2");
            } else {
                index = Arrays.binarySearch(unique5, BSSIDs[i]);
                if (index >=0){
                    cellValue[4] = cellValue[4] + 2;
                    System.out.println("Unique in sell 5");
                } else {
                    index = Arrays.binarySearch(unique6, BSSIDs[i]);
                    if (index >=0){
                        cellValue[5] = cellValue[5] + 2;
                        System.out.println("Unique in sell 6");
                    } else {
                        index = Arrays.binarySearch(unique7, BSSIDs[i]);
                        if (index >=0){
                            cellValue[6] = cellValue[6] + 2;
                            System.out.println("Unique in sell 7");
                        } else {
                            index = Arrays.binarySearch(unique8, BSSIDs[i]);
                            if (index >=0){
                                cellValue[7] = cellValue[7] + 2;
                                System.out.println("Unique in sell 8");
                            } else {
                                System.out.println("Not Unique SSID");
                                index = Arrays.binarySearch(allSSIDs, BSSIDs[i]);
                                System.out.println("index of max RSSI: " + index);
                                maxval = 0;
                                prior_maxval = -1;
                                if (index < 0) {
                                    System.out.println("BSSI not found...");
                                } else {
                                    for (int k = 0; k < 8; k++) {
                                        posterior[k] = 0.125;
                                        prior[k] = 0.125;
                                    }
                                    System.out.println("before while loop:  posterior: " + Arrays.toString(posterior) + " prior_max: " + prior_maxval + " maxval:" + maxval);
                                    System.out.println("before loop BSSI: "+ BSSIDs[i]  + "  RSSI: " + (RSSIs[i]-90) + "dBm" + " index: " + index);
                                    while (maxval < 0.9 && prior_maxval!=maxval) {
                                        System.out.print("table data: ");
                                        for (int k = 0; k < 8; k++) {
                                            //using table data
                                            System.out.print(tableData[index * 8 + k][RSSIs[i]] + ",");
                                            posterior[k] = prior[k] * tableData[index * 8 + k][RSSIs[i]];
                                            sum = sum + posterior[k];
                                            prior[k] = posterior[k];
                                        }
                                        System.out.println(" ");
                                        System.out.println("before nomalize posterior: " + Arrays.toString(posterior) + " MAX P: " + maxval + " Prior max: " + prior_maxval + " sum: " + sum);
                                        prior_maxval = maxval;
                                        //normalize
                                        for (int k = 0; k < 8 && sum!=0; k++) {
                                            posterior[k] = posterior[k] / sum;
                                            maxval = Math.max(maxval, posterior[k]);
                                        }
                                        System.out.println("current posterior: " + Arrays.toString(posterior) + " MAX P: " + maxval + " Prior max: " + prior_maxval + " sum: " + sum);
                                        sum = 0;
                                    }
                                    //update cell value
                                    for (int q = 0; q < 8; q++) {
                                        if (posterior[q]==maxval && maxval!=0){
                                            cellValue[q] = cellValue[q] + 1;
                                        }
                                    }
                                    System.out.println("current cell values: " + Arrays.toString(cellValue));
                                }
                            }
                        }
                    }
                }
            }
            System.out.println("llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll");
        }
        title.setText("Belief: " + Arrays.toString(cellValue));
        //find cell with max value
        for (int q = 0; q < 8; q++) {
            if (cellValue[q] >= maxcell_value){
                maxcell_value = cellValue[q];
            }
//            CELLs[q].setVisibility(View.INVISIBLE);
        }
        System.out.println("current cell values: " + Arrays.toString(cellValue));
        System.out.println("old cell values: " + Arrays.toString(old_cellValue));
        int count = 0;
        for (int q = 0; q < 8; q++) {
            if (cellValue[q] == maxcell_value){
                switch(q) {
                    case 0:
                        Cell1.setVisibility(View.VISIBLE);
                        break;
                    case 1:
                        Cell2.setVisibility(View.VISIBLE);
                        break;
                    case 2:
                        Cell3.setVisibility(View.VISIBLE);
                        break;
                    case 3:
                        Cell4.setVisibility(View.VISIBLE);
                        break;
                    case 4:
                        Cell5.setVisibility(View.VISIBLE);
                        break;
                    case 5:
                        Cell6.setVisibility(View.VISIBLE);
                        break;
                    case 6:
                        Cell7.setVisibility(View.VISIBLE);
                        break;
                    case 7:
                        Cell8.setVisibility(View.VISIBLE);
                        break;
                    default:
                }
                count = count + 1;
            }
            if (cellValue[q]!=old_cellValue[q]){
                changed = true;
            }
            old_cellValue[q] = cellValue[q];
        }

        if (count>=3){
            Cell1.setVisibility(View.INVISIBLE);
            Cell2.setVisibility(View.INVISIBLE);
            Cell3.setVisibility(View.INVISIBLE);
            Cell4.setVisibility(View.INVISIBLE);
            Cell5.setVisibility(View.INVISIBLE);
            Cell6.setVisibility(View.INVISIBLE);
            Cell7.setVisibility(View.INVISIBLE);
            Cell8.setVisibility(View.INVISIBLE);
            rescan.setText("Please rescan !!!");
        } else if (!changed) {
            rescan.setText("Scanner stuck:(");
        } else{
            rescan.setText("You might be here :)");
        }

        changed = false;


    }


}